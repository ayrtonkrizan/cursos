{"version":3,"sources":["../../app-es6/dao/NegociacaoDao.js"],"names":["Negociacao","NegociacaoDao","connection","_connection","_store","negociacao","Promise","resolve","reject","request","transaction","objectStore","add","onsuccess","e","onerror","console","log","target","error","cursor","openCursor","negociacoes","res","result","dado","value","push","_data","_quantidade","_valor","continue","clear"],"mappings":";;;;;;;;;;;;;;;AAAQA,sB,qBAAAA,U;;;;;;;;;;;;;;;;;;;;;qCAEKC,a;AAET,uCAAYC,UAAZ,EAAwB;AAAA;;AAEpB,yBAAKC,WAAL,GAAmBD,UAAnB;AACA,yBAAKE,MAAL,GAAc,aAAd;AACH;;;;6CAEQC,U,EAAY;AAAA;;AAEjB,+BAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;;AAEpC,gCAAIC,UAAU,MACTN,WADS,CAETO,WAFS,CAEG,CAAC,MAAKN,MAAN,CAFH,EAEiB,WAFjB,EAGTO,WAHS,CAGG,MAAKP,MAHR,EAITQ,GAJS,CAILP,UAJK,CAAd;;AAMAI,oCAAQI,SAAR,GAAoB,UAACC,CAAD,EAAO;AACvBP;AACH,6BAFD;;AAIAE,oCAAQM,OAAR,GAAkB,aAAK;AACnBC,wCAAQC,GAAR,CAAYH,EAAEI,MAAF,CAASC,KAArB;AACAX,uCAAO,yCAAP;AACH,6BAHD;AAIH,yBAhBM,CAAP;AAiBH;;;iDAEW;AAAA;;AACR,+BAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,gCAAIY,SAAS,OAAKjB,WAAL,CACRO,WADQ,CACI,CAAC,OAAKN,MAAN,CADJ,EACkB,WADlB,EAERO,WAFQ,CAEI,OAAKP,MAFT,EAGRiB,UAHQ,EAAb;;AAKA,gCAAIC,cAAc,EAAlB;;AAEAF,mCAAOP,SAAP,GAAmB,aAAK;AACpB,oCAAIU,MAAMT,EAAEI,MAAF,CAASM,MAAnB;AACA,oCAAGD,GAAH,EAAO;AACH,wCAAIE,OAAOF,IAAIG,KAAf;AACAJ,gDAAYK,IAAZ,CAAiB,IAAI3B,UAAJ,CAAeyB,KAAKG,KAApB,EAA2BH,KAAKI,WAAhC,EAA6CJ,KAAKK,MAAlD,CAAjB;AACAP,wCAAIQ,QAAJ;AACH,iCAJD,MAKI;AACAxB,4CAAQe,WAAR;AACH;AACJ,6BAVD;AAWAF,mCAAOL,OAAP,GAAiB,aAAK;AAClBC,wCAAQC,GAAR,CAAYH,EAAEI,MAAF,CAASC,KAArB;AACAX,uCAAO,wCAAP;AACH,6BAHD;AAIH,yBAvBM,CAAP;AAwBH;;;iDACW;AAAA;;AACR,+BAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,gCAAIC,UAAU,OAAKN,WAAL,CACTO,WADS,CACG,CAAC,OAAKN,MAAN,CADH,EACiB,WADjB,EAETO,WAFS,CAEG,OAAKP,MAFR,EAGT4B,KAHS,EAAd;;AAKAvB,oCAAQI,SAAR,GAAoB;AAAA,uCAAKN,QAAQ,mCAAR,CAAL;AAAA,6BAApB;AACAE,oCAAQM,OAAR,GAAkB,aAAK;AACnBC,wCAAQC,GAAR,CAAYH,CAAZ;AACAN,uCAAO,yCAAP;AACH,6BAHD;AAIH,yBAXM,CAAP;AAYH","file":"NegociacaoDao.js","sourcesContent":["import {Negociacao} from '../models/Negociacao';\n\nexport class NegociacaoDao {\n\n    constructor(connection) {\n\n        this._connection = connection;\n        this._store = 'negociacoes';\n    }\n\n    adiciona(negociacao) {\n\n        return new Promise((resolve, reject) => {\n\n            let request = this\n                ._connection\n                .transaction([this._store],\"readwrite\")\n                .objectStore(this._store)\n                .add(negociacao);\n\n            request.onsuccess = (e) => {\n                resolve();\n            };\n\n            request.onerror = e => {\n                console.log(e.target.error);\n                reject('Não foi possível adicionar a negociação');\n            };                \n        });\n    }\n\n    listaTodos(){\n        return new Promise((resolve, reject) => {\n            let cursor = this._connection\n                .transaction([this._store],'readwrite')\n                .objectStore(this._store)\n                .openCursor();\n            \n            let negociacoes = [];\n            \n            cursor.onsuccess = e => {\n                let res = e.target.result;\n                if(res){\n                    let dado = res.value;\n                    negociacoes.push(new Negociacao(dado._data, dado._quantidade, dado._valor));\n                    res.continue();\n                }\n                else{\n                    resolve(negociacoes);\n                }\n            };\n            cursor.onerror = e => {\n                console.log(e.target.error);\n                reject('Nao foi possivel listar as negociacoes');\n            };\n        });\n    }\n    apagaTodos(){\n        return new Promise((resolve, reject) => { \n            let request = this._connection\n                .transaction([this._store],'readwrite')\n                .objectStore(this._store)\n                .clear();\n            \n            request.onsuccess = e => resolve('Negociações apagadas com sucesso.');\n            request.onerror = e => {\n                console.log(e);\n                reject('Não foi possível apagar as negociações!');\n            }\n        });\n    }\n}"]}