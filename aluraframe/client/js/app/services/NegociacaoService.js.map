{"version":3,"sources":["../../app-es6/services/NegociacaoService.js"],"names":["HttpService","ConnectionFactory","NegociacaoDao","Negociacao","NegociacaoService","_http","cb","get","then","console","log","negociacoes","map","Date","objeto","data","quantidade","valor","catch","erro","Error","Promise","all","obterNegociacoesDaSemana","obterNegociacoesDaSemanaAnterior","obterNegociacoesDaSemanaRetrasada","periodos","reduce","arrayAchatado","array","concat","negociacao","getConnection","conexao","dao","adiciona","connection","listaTodos","apagaTodos","listaAtual","obterNegociacoes","filter","some","isEquals","negociacaoExistente"],"mappings":"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","file":"NegociacaoService.js","sourcesContent":["import {HttpService} from './HttpService';\nimport {ConnectionFactory} from './ConnectionFactory';\nimport {NegociacaoDao} from '../dao/NegociacaoDao';\nimport {Negociacao} from '../models/Negociacao';\n\nexport class NegociacaoService {\n    constructor() {\n        this._http = new HttpService();\n    }\n\n    obterNegociacoesDaSemana(cb){\n\n        return this._http\n                .get('negociacoes/semana')\n                .then(negociacoes => {\n                    console.log(negociacoes);\n                    return negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor));\n                })\n                .catch(erro => {\n                    console.log(erro);\n                    throw new Error('Não foi possível obter as negociações da semana');\n                })\n    }\n    \n    obterNegociacoesDaSemanaAnterior() {\n\n        return this._http\n                .get('negociacoes/anterior')\n                .then(negociacoes => {\n                    console.log(negociacoes);\n                    return negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor));\n    \n                })\n                .catch(erro => {\n                    console.log(erro);\n                    throw new Error('Não foi possível obter as negociações da semana anterior');\n                });\n    }\n    obterNegociacoesDaSemanaRetrasada() {\n\n        return this._http\n                .get('negociacoes/retrasada')\n                .then(negociacoes => {\n                    console.log(negociacoes);\n                    return negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor));\n    \n                })\n                .catch(erro => {\n                    console.log(erro);\n                    throw new Error('Não foi possível obter as negociações da semana retrasada');\n                });\n    }\n\n    obterNegociacoes(){\n        return Promise.all([\n            this.obterNegociacoesDaSemana(),\n            this.obterNegociacoesDaSemanaAnterior(),\n            this.obterNegociacoesDaSemanaRetrasada()\n        ])\n        .then(periodos => {\n            let negociacoes = periodos.reduce((arrayAchatado, array) => arrayAchatado.concat(array), [])\n              \n            return negociacoes;\n        })\n        .catch(erro => {\n            throw new Error(erro);\n        });\n    }\n\n    cadastra(negociacao) {\n        return ConnectionFactory\n           .getConnection()\n           .then(conexao => new NegociacaoDao(conexao))\n           .then(dao => dao.adiciona(negociacao))\n           .then(() => 'Negociação cadastrada com sucesso')\n           .catch(erro => {\n               console.log(erro);\n               throw new Error(\"Não foi possível adicionar a negociação\")\n           });\n   }\n\n   lista(){\n        return ConnectionFactory\n            .getConnection()\n            .then(connection => new NegociacaoDao(connection))\n            .then(dao => dao.listaTodos())\n            .catch(erro => {\n                console.log(erro);\n                throw new Error('Não foi possível obter as negociações')\n              })\n   }\n   apaga() {\n        return ConnectionFactory\n            .getConnection()\n            .then(connection => new NegociacaoDao(connection))\n            .then(dao => dao.apagaTodos())\n            .then(() => 'Negociações apagadas com sucesso')\n            .catch(erro => {\n                console.log(erro);\n                throw new Error('Não foi possível apagar as negociações')\n            });\n    }\n    importa(listaAtual) {\n\n        return this.obterNegociacoes()\n            .then(negociacoes =>\n                negociacoes.filter(negociacao =>\n                    !listaAtual.some(negociacaoExistente =>\n                        negociacao.isEquals(negociacaoExistente)))\n            )\n            .catch(erro => {\n                console.log(erro);\n                throw new Error(\"Não foi possível importar as negociações\");\n            });\n    }\n}"]}